{
  "schema_version": "1.4.0",
  "id": "GHSA-q37x-r635-xf49",
  "modified": "2025-03-06T18:31:11Z",
  "published": "2025-03-06T18:31:11Z",
  "aliases": [
    "CVE-2024-58084"
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: scm: Fix missing read barrier in qcom_scm_get_tzmem_pool()\n\nCommit 2e4955167ec5 (\"firmware: qcom: scm: Fix __scm and waitq\ncompletion variable initialization\") introduced a write barrier in probe\nfunction to store global '__scm' variable.  We all known barriers are\npaired (see memory-barriers.txt: \"Note that write barriers should\nnormally be paired with read or address-dependency barriers\"), therefore\naccessing it from concurrent contexts requires read barrier.  Previous\ncommit added such barrier in qcom_scm_is_available(), so let's use that\ndirectly.\n\nLack of this read barrier can result in fetching stale '__scm' variable\nvalue, NULL, and dereferencing it.\n\nNote that barrier in qcom_scm_is_available() satisfies here the control\ndependency.",
  "severity": [],
  "affected": [],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-58084"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/b628510397b5cafa1f5d3e848a28affd1c635302"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/e03db7c1255ebabba5e1a447754faeb138de15a2"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/fee921e3c641f64185abee83f9a6e65f0b380682"
    }
  ],
  "database_specific": {
    "cwe_ids": [],
    "severity": null,
    "github_reviewed": false,
    "github_reviewed_at": null,
    "nvd_published_at": "2025-03-06T17:15:21Z"
  }
}